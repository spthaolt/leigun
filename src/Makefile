top_srcdir=.
include config.mk

ECHO=/bin/echo
ifeq ($(shell uname),FreeBSD)
MAKE=gmake
else
MAKE=make
endif

SUBDIRS=  tools
SUBMODULES=arm ppc boards controllers devices printer c16x avr8 mips64 sh4 coldfire \
	   mos6510 m16c cli mcs51 float m32c gdb rx web
SHLIBS=

.PHONY: $(SUBDIRS) $(SUBMODULES)  subdirs depend all default


INCLUDES:=$(patsubst %,-I%,$(SUBDIRS)) -I.
INCLUDES += $(patsubst %,-I%,$(SUBMODULES)) -I.

SRCFILES:=softgun.c \
	pl190_irq.c arm_vfp.c xy_tree.c xy_hash.c bus.c signode.c \
	ste10_100.c m93c46.c linux-tap.c fio.c \
	dram.c sram.c amdflash.c usb_ohci.c cycletimer.c \
	configfile.c lxt971a.c ml6652.c  loader.c i2c_serdes.c i82559.c\
	pc16550.c rom.c \
	ihex.c srec.c shlib.c mainloop_events.c diskimage.c \
	aitc.c imx_timer.c serial.c cs8900.c mmcard.c \
	clock.c rfbserver.c sht71.c keyboard.c matrix_keyboard.c \
	usbdevice.c usbstdrq.c\
	djet460.c relais.c  senseless.c \
	lh79520_uart.c \
	hello_world.c lh79520_ssp.c logical.c sgstring.c \
	s3c2410_intco.c s3c2410_nand.c s3c2410_memco.c s3c2410_uart.c \
	parport_pc.c lh79520_rcpc.c mmc_crc.c crc32.c tx49xx_sio.c \
	isp1105.c  filesystem.c nullsound.c \
	alsasound.c sound.c sd_spi.c fbdisplay.c strhash.c \
	debugvars.c debugger.c sglib.c crc8.c spidevice.c jtag_tap.c \
	crc16.c mmcdev.c nand.c throttle.c 


# SHSRC := 
TARGETS := .depend version.c subdirs softgun 
INSTALL_BINS := softgun 
default: all

ifneq ($(MAKECMDGOALS),clean)
-include .depend
endif

include $(patsubst %,%/module.mk,$(SUBMODULES))

OBJS := $(SRCFILES:.c=.o) version.o 
OBJS_BE :=$(SRCFILES:.c=.be.o) version.be.o 

#
# Generate shared libraries from a LIST of SHLIBS 
# each defining a variable called SHOBJS_$(library)
#

# First remove the path and the suffix
SHLIBNAMES=$(basename $(notdir $(SHLIBS)))
# Gererate a list of the variables containing the Objects
SHSRC_LISTS=$(foreach c,$(SHLIBNAMES),SHSRCS_$c)
# Generate a list of the Objects
SHSRCS = $(foreach c,$(SHSRC_LISTS),$($(c)))

SHOBJS += $(SHSRCS:.c=.po)

#
# Make an object list for each shared lib using static pattern Rules
#
.SECONDEXPANSION:
$(SHLIBS): %.so:  $$(addsuffix .po,$$(basename $$($$(foreach x,$$(basename $$(notdir %)),SHSRCS_$$x))))
	$(CC) $(SHAREDCFLAGS) $(DEFS) $(SHAREDLDFLAGS) $(CFLAGS) $^ -o $@

ALL_SRCS := $(SRCFILES) $(SHSRCS)

all: $(TARGETS) $(SHOBJS) $(SHLIBS)
	@#echo "Targets: " $(TARGETS)

subdirs: $(SUBDIRS)

$(SUBDIRS):
	@if [ -d $@ ]; then $(MAKE) -C $@; fi

version.c:
	$(shell $(ECHO) "/*" >> $@;) \
	$(shell $(ECHO) " * This file is automatically generated" >> $@;) \
	$(shell $(ECHO) " */" >> $@;) \
	$(shell $(ECHO) "" >> $@;) \
	$(shell $(ECHO) "#include <version.h>" >> $@;) \
	$(shell $(ECHO) -n "const char *softgun_version = \"" >> $@;) \
	$(shell x=$(CURDIR); $(ECHO) -n $${x##*/} >> $@;) \
	$(shell $(ECHO) "\";" >> $@;) 

install: $(INSTALL_BINS)
	@for f in $(INSTALL_BINS); do \
		install -m 755 $$f $(bindir); \
	done
	mkdir -p $(libdir)
	@for dir in $(SUBDIRS) ; do \
		if [ -d $$dir ]; then \
			$(MAKE) -C $$dir install; \
		fi; \
	done
	@for obj in $(SHLIBS) ; do \
		install -m 0755 $$obj $(libdir); \
	done


softgun: $(OBJS) 
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

boards/libboards.a:
	$(MAKE) -C boards libboards.a

depend: .depend

#####################################################
# make depend does not work for shared libraries 
# currently  (needs an .so dependecy not an .o)
#####################################################
.depend:
	rm -f .depend
	for file in $(ALL_SRCS); do \
		var=$$(dirname $$file); \
		$(ECHO) -n "$$var/" > .tmpdepend; \
		$(CC) -MM  $(INCLUDES)  $$file >> .tmpdepend && \
		cat .tmpdepend >> .depend; \
	done; \
	rm -f .tmpdepend

clean:
	rm -f $(TARGETS)  $(OBJS)
	@for dir in $(SUBDIRS); do \
		if [ -d $$dir ]; then \
			$(MAKE) -C $$dir clean; \
		fi; \
	done; \
	rm -f $(SHOBJS) $(SHLIBS) .depend .tmpdepend
